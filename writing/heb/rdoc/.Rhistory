knitr::opts_chunk$set(echo = TRUE)
#Load data
hebtrial <- read.csv('../data/heb_trial_clean_082819.csv')
knitr::opts_chunk$set(echo = TRUE)
drive_checklist <-
read.csv("drive_checklist.csv")
#Reformat date columns
drive_checklist$date_of_mri <-
as.Date(drive_checklist$date_of_mri, format = "%Y-%m-%d")
drive_checklist$date.of.birth <-
as.Date(drive_checklist$date.of.birth, format = "%Y-%m-%d")
drive_checklist$date_of_eeg <-
as.Date(drive_checklist$date_of_eeg, format = "%Y-%m-%d")
#Calculate age in days
for (i in 1:length(drive_checklist$date.of.birth)) {
if (!is.na(drive_checklist[i, "date_of_mri"])) {
drive_checklist[i, "age_at_neuro_day"] <-
difftime(drive_checklist[i, "date_of_mri"], drive_checklist[i, "date.of.birth"],
units = c("days"))
} else {
drive_checklist[i, "age_at_neuro_day"] <-
difftime(drive_checklist[i, "date_of_eeg"], drive_checklist[i, "date.of.birth"],
units = c("days"))
}
}
monnb <- function(d) {
lt <- as.POSIXlt(as.Date(d, origin="1900-01-01"))
lt$year*12 + lt$mon
}
# compute a month difference as a difference between two monnb's
mondf <- function(d1, d2) {
monnb(d2) - monnb(d1)
}
#Calculate age in months
for (i in 1:length(drive_checklist$date.of.birth)) {
if (!is.na(drive_checklist[i, "date_of_mri"])) {
drive_checklist[i, "age_at_neuro_month"] <-
mondf(drive_checklist[i, "date.of.birth"], drive_checklist[i, "date_of_mri"])
} else {
drive_checklist[i, "age_at_neuro_month"] <-
mondf(drive_checklist[i, "date.of.birth"], drive_checklist[i, "date_of_eeg"])
}
}
drive_checklist$age_at_neuro_year <- round(drive_checklist$age_at_neuro_month /12, 3)
#Read in demographic data
bucld_demo_all <- read.csv("bucld_demo_all_manually_editted_use_this.csv")
#Read in GJT data
gjt <- read.csv("gjt_score.csv")
#Read in analyzed behavioral data
bucld_blast_data_list <-
list.files(path = "yourwkdir_to_the_zipped_folder",
pattern = "*blast_all.csv", full.names = T)
bucld_spoli_data_list <-
list.files(path = "yourwkdir_to_the_zipped_folder",
pattern = "*spoli_all.csv", full.names = T)
bucld_blast_data <- lapply(bucld_blast_data_list, read.csv)
bucld_spoli_data <- lapply(bucld_spoli_data_list, read.csv)
#Seperate mean rt and rt slope data into two dataframes
bucld_blast_data[[4]] <- bucld_blast_data[[3]][,c("X", "par_id", "mean_rt", "task")]
View(bucld_blast_data)
bucld_blast_data_list <-
list.files(path = "/Users/zhenghanqi/Dropbox (MIT)/UDel/projects/blast/behavior/blast_2019_poster_analysis/",
pattern = "*blast_all.csv", full.names = T)
bucld_blast_data_list <-
list.files(path = "/Users/zhenghanqi/Dropbox (MIT)/UDel/projects/blast/behavior/bucld_2019_poster_analysis",
pattern = "*blast_all.csv", full.names = T)
bucld_spoli_data_list <-
list.files(path = "/Users/zhenghanqi/Dropbox (MIT)/UDel/projects/blast/behavior/bucld_2019_poster_analysis",
pattern = "*spoli_all.csv", full.names = T)
bucld_blast_data <- lapply(bucld_blast_data_list, read.csv)
bucld_spoli_data <- lapply(bucld_spoli_data_list, read.csv)
bucld_blast_data[[4]] <- bucld_blast_data[[3]][,c("X", "par_id", "mean_rt", "task")]
bucld_blast_data[[5]] <- bucld_blast_data[[3]][,c("X", "par_id", "scaled_rt_slope", "task")]
bucld_spoli_data[[4]] <- bucld_spoli_data[[3]][,c("X", "par_id", "mean_rt", "task")]
bucld_spoli_data[[5]] <- bucld_spoli_data[[3]][,c("X", "par_id", "scaled_rt_slope", "task")]
#Rbind Blast and Spoli data for each measure------------------------------------------------------------------------------
blast_spoli_data <- list()
for (i in 1:length(bucld_blast_data)) {
blast_spoli_data[[i]] <-
rbind(bucld_blast_data[[i]], bucld_spoli_data[[i]])
}
#Select only Accuracy data, reformat column names and add in which measure it is into a new column
blast_spoli_acc <- blast_spoli_data[[1]][,c("X", "acc_id", "subj_corr", "task")]
blast_spoli_acc$measure <- "accuracy"
colnames(blast_spoli_acc)[colnames(blast_spoli_acc) == "subj_corr"] <- "value"
colnames(blast_spoli_acc)[colnames(blast_spoli_acc) == "acc_id"] <- "part_id"
#Select only Entropy data, reformat column names and add in which measure it is into a new column
blast_spoli_entropy <- blast_spoli_data[[2]][,c("X", "part_id", "mean_entropy", "task")]
blast_spoli_entropy$measure <- "entropy"
colnames(blast_spoli_entropy)[colnames(blast_spoli_entropy) == "mean_entropy"] <- "value"
#Select only Mean RT data, reformat column names and add in which measure it is into a new column
library("stringr")
blast_spoli_rt <- blast_spoli_data[[4]][,c("X", "par_id", "mean_rt", "task")]
blast_spoli_rt$measure <- "rt"
blast_spoli_rt$par_id <- as.character(blast_spoli_rt$par_id)
blast_spoli_rt[which(blast_spoli_rt$task == "children_lsl_indiv_rts"), "par_id"] <-
str_extract(blast_spoli_rt[which(blast_spoli_rt$task == "children_lsl_indiv_rts"), "par_id"], "\\S+(?=_lsl)")
colnames(blast_spoli_rt)[colnames(blast_spoli_rt) == "mean_rt"] <- "value"
colnames(blast_spoli_rt)[colnames(blast_spoli_rt) == "par_id"] <- "part_id"
#Select only RT Slope data, reformat column names and add in which measure it is into a new column
blast_spoli_slope <- blast_spoli_data[[5]][,c("X", "par_id", "scaled_rt_slope", "task")]
blast_spoli_slope$measure <- "slope"
blast_spoli_slope$par_id <- as.character(blast_spoli_slope$par_id)
blast_spoli_slope[which(blast_spoli_slope$task == "children_lsl_indiv_rts"), "par_id"] <-
str_extract(blast_spoli_slope[which(blast_spoli_slope$task == "children_lsl_indiv_rts"), "par_id"], "\\S+(?=_lsl)")
blast_spoli_slope$task <- paste0(blast_spoli_slope$task, "_slope")
colnames(blast_spoli_slope)[colnames(blast_spoli_slope) == "scaled_rt_slope"] <- "value"
colnames(blast_spoli_slope)[colnames(blast_spoli_slope) == "par_id"] <- "part_id"
#Format GJT data
gjt$measure <- "gjt_std_score"
gjt$task <- "gjt_web"
gjt$X <- seq(from = 1, to = length(gjt$part_id), by = 1)
colnames(gjt)[colnames(gjt) == "standard_score"] <- "value"
blast_spoli_gjt <- gjt[,c("X", "part_id", "value", "task", "measure")]
#Rbind all measures into long form
blast_spoli_data_long <- rbind(blast_spoli_acc, blast_spoli_entropy, blast_spoli_rt, blast_spoli_slope, blast_spoli_gjt)
blast_spoli_data_long$value <- as.numeric(as.character(blast_spoli_data_long$value))
library("reshape")
library("data.table")
library("dplyr")
blast_spoli_data_wide <- cast(blast_spoli_data_long, part_id~measure+task)
#Extract relevant demo information
gender_group_info <- bucld_demo_all[,c("part_id", "group", "sex", "age_at_web_month", "age_at_web_year")]
#Merge all demo data with sl measures
blast_spoli_data_wide <-
merge(gender_group_info, blast_spoli_data_wide,
by.x = "part_id", by.y = "part_id",
all.y = TRUE)
blast_spoli_data_wide$accuracy_children_lsl_random_2afc_accuracies <-
as.numeric(as.character(blast_spoli_data_wide$accuracy_children_lsl_random_2afc_accuracies))
blast_spoli_data_wide$accuracy_lsl_predictable_2afc_accuracies <-
as.numeric(as.character(blast_spoli_data_wide$accuracy_lsl_predictable_2afc_accuracies))
blast_spoli_data_wide$entropy_children_lsl_predictable_entropy <-
as.numeric(as.character(blast_spoli_data_wide$entropy_children_lsl_predictable_entropy))
blast_spoli_data_wide$entropy_children_lsl_randomized_entropy <-
as.numeric(as.character(blast_spoli_data_wide$entropy_children_lsl_randomized_entropy))
blast_spoli_data_wide$accuracy_children_lsl_accuracies <-
coalesce(blast_spoli_data_wide$accuracy_children_lsl_random_2afc_accuracies,
blast_spoli_data_wide$accuracy_lsl_predictable_2afc_accuracies)
blast_spoli_data_wide$entropy_children_lsl_entropy <-
coalesce(blast_spoli_data_wide$entropy_children_lsl_predictable_entropy,
blast_spoli_data_wide$entropy_children_lsl_randomized_entropy)
ineligible_part_spoli <- blast_spoli_data_wide[which(blast_spoli_data_wide$age_at_web_year > 18),]
blast_spoli_data_wide <- blast_spoli_data_wide[-which(blast_spoli_data_wide$age_at_web_year > 18),]
bucld_scq_web <- read.csv("bucld_demo_all_manually_editted_use_this.csv")
bucld_scq_web <- bucld_scq_web[,c("part_id", "final_score")]
colnames(bucld_scq_web)[colnames(bucld_scq_web) == "final_score"] <- "scq_web"
#Extract participants that have SOME SL task completed
bucld_all_completed <-
blast_spoli_data_wide[which(
blast_spoli_data_wide$accuracy_children_tsl_accuracies != "" |
blast_spoli_data_wide$accuracy_children_ssl_accuracies != "" |
blast_spoli_data_wide$accuracy_children_vsl_accuracies != "" |
blast_spoli_data_wide$accuracy_children_lsl_accuracies != ""),]
#Remove blast_c_011 who has not given consent, cannot analyze
bucld_all_completed <- bucld_all_completed[-which(bucld_all_completed$part_id == "blast_c_011"),]
bucld_all_completed <-
merge(bucld_all_completed, bucld_scq_web,
by.x = "part_id", by.y = "part_id",
all.x = TRUE)
in_lab_assessment <-
drive_checklist[,c(1, 8:20,34,53,54,60)]
bucld_all_completed <-
merge(bucld_all_completed, in_lab_assessment,
by.x = "part_id", by.y = "Participant.ID",
all.x = TRUE)
gjt_original_file <- read.csv("gjt_score.csv")
bucld_all_completed <-
merge(bucld_all_completed, gjt_original_file[,c(1,4:5)],
by.x = "part_id", by.y = "part_id",
all.x = TRUE)
bucld_all_completed[,c(4:46)] <-
lapply(bucld_all_completed[,c(4:46)], function(x) {
if (is.factor(x))
as.numeric(as.character(x))
else
x
})
bucld_all_completed_acc <- bucld_all_completed[,c(1:2, 5:10, 25)]
bucld_all_completed_slope <- bucld_all_completed[,c(1:2, 5, 21:24)]
bucld_all_completed_rt <- bucld_all_completed[,c(1:2, 5, 17:20)]
bucld_all_completed_entropy <- bucld_all_completed[,c(1:2, 5, 11:15, 26)]
bucld_all_completed_acc<- melt(bucld_all_completed_acc,
id.vars = c("part_id", "group", "age_at_web_year"))
bucld_all_completed_slope<- melt(bucld_all_completed_slope,
id.vars = c("part_id", "group", "age_at_web_year"))
bucld_all_completed_rt<- melt(bucld_all_completed_rt,
id.vars = c("part_id", "group", "age_at_web_year"))
bucld_all_completed_entropy<- melt(bucld_all_completed_entropy,
id.vars = c("part_id", "group", "age_at_web_year"))
colnames(bucld_all_completed_acc)[colnames(bucld_all_completed_acc) == "variable"] <- "task"
colnames(bucld_all_completed_acc)[colnames(bucld_all_completed_acc) == "value"] <- "accuracy"
colnames(bucld_all_completed_slope)[colnames(bucld_all_completed_slope) == "variable"] <- "task"
colnames(bucld_all_completed_slope)[colnames(bucld_all_completed_slope) == "value"] <- "rt_slope"
colnames(bucld_all_completed_rt)[colnames(bucld_all_completed_rt) == "variable"] <- "task"
colnames(bucld_all_completed_rt)[colnames(bucld_all_completed_rt) == "value"] <- "mean_rt"
colnames(bucld_all_completed_entropy)[colnames(bucld_all_completed_entropy) == "variable"] <- "task"
colnames(bucld_all_completed_entropy)[colnames(bucld_all_completed_entropy) == "value"] <- "entropy"
View(bucld_all_completed_acc)
View(blast_spoli_data_long)
View(bucld_all_completed)
View(bucld_all_completed_acc)
acc_task_group_aov <-
aov(accuracy~group*task + age_at_web_year + Error(part_id/task), data = bucld_all_completed_acc)
summary(acc_task_group_aov)
rt_slope_task_group_aov <-
aov(rt_slope~group*task + age_at_web_year + Error(part_id/task), data = bucld_all_completed_slope)
summary(rt_slope_task_group_aov)
rt_task_group_aov <-
aov(mean_rt~group*task + age_at_web_year + Error(part_id/task), data = bucld_all_completed_rt)
summary(rt_task_group_aov)
entropy_task_group_aov <-
aov(entropy~group*task + age_at_web_year + Error(part_id/task), data = bucld_all_completed_entropy)
summary(entropy_task_group_aov)
